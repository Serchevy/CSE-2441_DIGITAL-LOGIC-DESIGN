// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 20.1 (Build Build 720 11/11/2020)
// Created on Fri Mar 03 14:39:49 2023

binary2seven binary2seven_inst
(
	.w(w_sig) ,	// input  w_sig
	.x(x_sig) ,	// input  x_sig
	.y(y_sig) ,	// input  y_sig
	.z(z_sig) ,	// input  z_sig
	.a1(a1_sig) ,	// output  a1_sig
	.b1(b1_sig) ,	// output  b1_sig
	.c1(c1_sig) ,	// output  c1_sig
	.d1(d1_sig) ,	// output  d1_sig
	.e1(e1_sig) ,	// output  e1_sig
	.f1(f1_sig) ,	// output  f1_sig
	.g1(g1_sig) ,	// output  g1_sig
	.a0(a0_sig) ,	// output  a0_sig
	.b0(b0_sig) ,	// output  b0_sig
	.c0(c0_sig) ,	// output  c0_sig
	.d0(d0_sig) ,	// output  d0_sig
	.e0(e0_sig) ,	// output  e0_sig
	.f0(f0_sig) ,	// output  f0_sig
	.g0(g0_sig) 	// output  g0_sig
);

